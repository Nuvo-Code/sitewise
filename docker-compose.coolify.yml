services:
  app:
    image: 'nuvocode/sitewise:latest'
    container_name: sitewise_app
    restart: unless-stopped
    ports:
      - "${APP_PORT:-80}:80"
    environment:
      - 'APP_NAME=${APP_NAME:-Sitewise}'
      - APP_ENV=production
      - APP_DEBUG=false
      - 'APP_KEY=${APP_KEY}'
      - 'APP_URL=${APP_URL:-http://localhost}'
      - DB_CONNECTION=pgsql
      - 'DB_HOST=${DB_HOST:-database}'
      - 'DB_PORT=${DB_PORT:-5432}'
      - 'DB_DATABASE=${DB_DATABASE:-sitewise}'
      - 'DB_USERNAME=${DB_USERNAME:-sitewise}'
      - 'DB_PASSWORD=${DB_PASSWORD}'
      - 'CACHE_DRIVER=${CACHE_DRIVER:-redis}'
      - 'SESSION_DRIVER=${SESSION_DRIVER:-redis}'
      - 'QUEUE_CONNECTION=${QUEUE_CONNECTION:-redis}'
      - 'REDIS_HOST=${REDIS_HOST:-redis}'
      - 'REDIS_PASSWORD=${REDIS_PASSWORD:-}'
      - 'REDIS_PORT=${REDIS_PORT:-6379}'
      - 'MAIL_MAILER=${MAIL_MAILER:-log}'
      - 'MAIL_HOST=${MAIL_HOST:-}'
      - 'MAIL_PORT=${MAIL_PORT:-587}'
      - 'MAIL_USERNAME=${MAIL_USERNAME:-}'
      - 'MAIL_PASSWORD=${MAIL_PASSWORD:-}'
      - 'MAIL_ENCRYPTION=${MAIL_ENCRYPTION:-tls}'
      - 'MAIL_FROM_ADDRESS=${MAIL_FROM_ADDRESS:-noreply@sitewise.local}'
      - 'MAIL_FROM_NAME=${MAIL_FROM_NAME:-Sitewise}'
      - 'FILESYSTEM_DISK=${FILESYSTEM_DISK:-public}'
      - 'LOG_CHANNEL=${LOG_CHANNEL:-stack}'
      - 'LOG_LEVEL=${LOG_LEVEL:-error}'
    depends_on:
      - database
      - redis
    networks:
      - sitewise
    healthcheck:
      test:
        - CMD
        - curl
        - '-f'
        - 'http://localhost:80/up'
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
  database:
    image: 'postgres:17-alpine'
    container_name: sitewise_db
    restart: unless-stopped
    ports:
      - '${FORWARD_DB_PORT:-5432}:5432'
    environment:
      - 'POSTGRES_DB=${DB_DATABASE:-sitewise}'
      - 'POSTGRES_USER=${DB_USERNAME:-sitewise}'
      - 'POSTGRES_PASSWORD=${DB_PASSWORD}'
      - 'POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=C --lc-ctype=C'
    volumes:
      - 'db_data:/var/lib/postgresql/data'
      - './database/init:/docker-entrypoint-initdb.d'
    networks:
      - sitewise
    healthcheck:
      test:
        - CMD-SHELL
        - 'pg_isready -U ${DB_USERNAME:-sitewise} -d ${DB_DATABASE:-sitewise}'
      interval: 10s
      timeout: 5s
      retries: 5
  redis:
    image: 'redis:7-alpine'
    container_name: sitewise_redis
    restart: unless-stopped
    ports:
      - '${FORWARD_REDIS_PORT:-6379}:6379'
    command: 'redis-server --appendonly yes --requirepass "${REDIS_PASSWORD:-}"'
    volumes:
      - 'redis_data:/data'
    networks:
      - sitewise
    healthcheck:
      test:
        - CMD
        - redis-cli
        - ping
      interval: 10s
      timeout: 5s
      retries: 5
networks:
  sitewise:
    driver: bridge
volumes:
  db_data:
    driver: local
  redis_data:
    driver: local